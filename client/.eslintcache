[{"/mnt/c/Applications/crud_MERN/client/src/index.tsx":"1","/mnt/c/Applications/crud_MERN/client/src/reportWebVitals.ts":"2","/mnt/c/Applications/crud_MERN/client/src/App.tsx":"3","/mnt/c/Applications/crud_MERN/client/src/components/User/Users.tsx":"4","/mnt/c/Applications/crud_MERN/client/src/components/User/UserItem.tsx":"5","/mnt/c/Applications/crud_MERN/client/src/components/User/userForm.tsx":"6","/mnt/c/Applications/crud_MERN/client/src/components/User/UserForm.tsx":"7","/mnt/c/Applications/crud_MERN/client/src/components/User/UserAPI.tsx":"8"},{"size":500,"mtime":1611667919338,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1611667919340,"results":"11","hashOfConfig":"10"},{"size":884,"mtime":1612153616282,"results":"12","hashOfConfig":"10"},{"size":2758,"mtime":1612354092658,"results":"13","hashOfConfig":"10"},{"size":2580,"mtime":1612271667422,"results":"14","hashOfConfig":"10"},{"size":3346,"mtime":1612123737005,"results":"15","hashOfConfig":"10"},{"size":3342,"mtime":1612354104483,"results":"16","hashOfConfig":"10"},{"size":1406,"mtime":1612273040131,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"2748jo",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Applications/crud_MERN/client/src/index.tsx",[],["36","37"],"/mnt/c/Applications/crud_MERN/client/src/reportWebVitals.ts",[],"/mnt/c/Applications/crud_MERN/client/src/App.tsx",[],"/mnt/c/Applications/crud_MERN/client/src/components/User/Users.tsx",["38"],"/mnt/c/Applications/crud_MERN/client/src/components/User/UserItem.tsx",["39","40","41"],"import { IUser } from '../../interfaces/types'\ntype UserProps = {\n    userindex: number,\n    user: IUser,\n    currentlyEditingIndex: number,\n    updateUserInfo: React.ChangeEventHandler<HTMLTextAreaElement>,\n    startEditing: React.MouseEventHandler<HTMLButtonElement>,\n    saveUser: React.MouseEventHandler<HTMLButtonElement>,\n    removeUser: React.MouseEventHandler<HTMLButtonElement>\n};\n\nexport default function UserItem({\n    userindex, user, currentlyEditingIndex,\n    updateUserInfo, startEditing,\n    saveUser, removeUser }: UserProps) {\n    const getDisplayName = (firstName: string, lastName: string) => {\n        return `${lastName}, ${firstName}`\n    }\n    return (\n        <tr>\n            <td>\n                {currentlyEditingIndex == userindex ?\n                    <span>\n                        <textarea\n                            name=\"firstName\"\n                            value={user.firstName}\n                            data-userindex={userindex}\n                            data-userattribute=\"firstName\"\n                            onChange={updateUserInfo}>\n                        </textarea><br />\n                        <textarea\n                            name=\"lastName\"\n                            value={user.lastName}\n                            data-userindex={userindex}\n                            data-userattribute=\"lastName\"\n                            onChange={updateUserInfo}>\n                        </textarea>\n                    </span>\n                    :\n                    getDisplayName(user.firstName, user.lastName)\n                }\n            </td>\n            <td>\n                {currentlyEditingIndex == userindex ?\n                    <span><textarea\n                        name=\"firstName\"\n                        value={user.email}\n                        data-userindex={userindex}\n                        data-userattribute=\"email\"\n                        onChange={updateUserInfo}></textarea><br /></span>\n                    :\n                    user.email\n                }\n            </td>\n            <td>\n                {currentlyEditingIndex == userindex ?\n                    <button data-userindex={userindex} onClick={saveUser}>Save</button>\n                    :\n                    <button data-userindex={userindex} onClick={startEditing}>Edit</button>\n                }\n                <button data-userindex={userindex} onClick={removeUser}>Delete</button>\n            </td>\n        </tr >\n\n        // <li className=\"userItem\">{getDisplayName(user.firstName, user.lastName)}</li>\n    )\n}\n","/mnt/c/Applications/crud_MERN/client/src/components/User/userForm.tsx",[],"/mnt/c/Applications/crud_MERN/client/src/components/User/UserForm.tsx",[],"/mnt/c/Applications/crud_MERN/client/src/components/User/UserAPI.tsx",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":82,"column":6,"nodeType":"48","endLine":82,"endColumn":8,"suggestions":"49"},{"ruleId":"50","severity":1,"message":"51","line":22,"column":40,"nodeType":"52","messageId":"53","endLine":22,"endColumn":42},{"ruleId":"50","severity":1,"message":"51","line":44,"column":40,"nodeType":"52","messageId":"53","endLine":44,"endColumn":42},{"ruleId":"50","severity":1,"message":"51","line":56,"column":40,"nodeType":"52","messageId":"53","endLine":56,"endColumn":42},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setUsers'. Either include it or remove the dependency array. If 'setUsers' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["56"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [setUsers]",{"range":"59","text":"60"},[2416,2418],"[setUsers]"]